// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Client.AutorestClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class Erc20Token
    {
        /// <summary>
        /// Initializes a new instance of the Erc20Token class.
        /// </summary>
        public Erc20Token()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Erc20Token class.
        /// </summary>
        public Erc20Token(int blockTimestamp, string assetId = default(string), string address = default(string), string blockHash = default(string), string deployerAddress = default(string), int? tokenDecimals = default(int?), string tokenName = default(string), string tokenSymbol = default(string), string tokenTotalSupply = default(string), string transactionHash = default(string))
        {
            AssetId = assetId;
            Address = address;
            BlockHash = blockHash;
            BlockTimestamp = blockTimestamp;
            DeployerAddress = deployerAddress;
            TokenDecimals = tokenDecimals;
            TokenName = tokenName;
            TokenSymbol = tokenSymbol;
            TokenTotalSupply = tokenTotalSupply;
            TransactionHash = transactionHash;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AssetId")]
        public string AssetId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Address")]
        public string Address { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BlockHash")]
        public string BlockHash { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BlockTimestamp")]
        public int BlockTimestamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DeployerAddress")]
        public string DeployerAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TokenDecimals")]
        public int? TokenDecimals { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TokenName")]
        public string TokenName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TokenSymbol")]
        public string TokenSymbol { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TokenTotalSupply")]
        public string TokenTotalSupply { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TransactionHash")]
        public string TransactionHash { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
