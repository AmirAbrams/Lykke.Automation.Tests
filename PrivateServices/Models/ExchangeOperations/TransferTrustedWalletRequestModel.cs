// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Client.AutorestClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class TransferTrustedWalletRequestModel
    {
        /// <summary>
        /// Initializes a new instance of the TransferTrustedWalletRequestModel
        /// class.
        /// </summary>
        public TransferTrustedWalletRequestModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TransferTrustedWalletRequestModel
        /// class.
        /// </summary>
        public TransferTrustedWalletRequestModel(string destClientId, string sourceClientId, double amount, string assetId, string transactionId)
        {
            DestClientId = destClientId;
            SourceClientId = sourceClientId;
            Amount = amount;
            AssetId = assetId;
            TransactionId = transactionId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "destClientId")]
        public string DestClientId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sourceClientId")]
        public string SourceClientId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "amount")]
        public double Amount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "assetId")]
        public string AssetId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transactionId")]
        public string TransactionId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DestClientId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DestClientId");
            }
            if (SourceClientId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SourceClientId");
            }
            if (AssetId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AssetId");
            }
            if (TransactionId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TransactionId");
            }
        }
    }
}
