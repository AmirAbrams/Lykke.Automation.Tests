// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Client.ApiV2.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class WithdrawalCryptoInfoModel
    {
        /// <summary>
        /// Initializes a new instance of the WithdrawalCryptoInfoModel class.
        /// </summary>
        public WithdrawalCryptoInfoModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WithdrawalCryptoInfoModel class.
        /// </summary>
        public WithdrawalCryptoInfoModel(string baseAddressTitle, bool addressExtensionMandatory, string addressExtensionTitle)
        {
            BaseAddressTitle = baseAddressTitle;
            AddressExtensionMandatory = addressExtensionMandatory;
            AddressExtensionTitle = addressExtensionTitle;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BaseAddressTitle")]
        public string BaseAddressTitle { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AddressExtensionMandatory")]
        public bool AddressExtensionMandatory { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AddressExtensionTitle")]
        public string AddressExtensionTitle { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (BaseAddressTitle == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "BaseAddressTitle");
            }
            if (AddressExtensionTitle == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AddressExtensionTitle");
            }
        }
    }
}
