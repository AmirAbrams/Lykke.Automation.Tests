// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Client.ApiV2.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class FundsResponseModel
    {
        /// <summary>
        /// Initializes a new instance of the FundsResponseModel class.
        /// </summary>
        public FundsResponseModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FundsResponseModel class.
        /// </summary>
        /// <param name="operation">Possible values include: 'Deposit',
        /// 'Withdraw'</param>
        /// <param name="type">Possible values include: 'Undefined', 'Card',
        /// 'Bank', 'Blockchain'</param>
        public FundsResponseModel(System.Guid id, string assetId, string assetName, double volume, FundsOperation operation, FundsType type, System.DateTime timestamp)
        {
            Id = id;
            AssetId = assetId;
            AssetName = assetName;
            Volume = volume;
            Operation = operation;
            Type = type;
            Timestamp = timestamp;
            CustomInit();
        }
        /// <summary>
        /// Static constructor for FundsResponseModel class.
        /// </summary>
        static FundsResponseModel()
        {
            Status = "Completed";
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public System.Guid Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AssetId")]
        public string AssetId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AssetName")]
        public string AssetName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Volume")]
        public double Volume { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Deposit', 'Withdraw'
        /// </summary>
        [JsonProperty(PropertyName = "Operation")]
        public FundsOperation Operation { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Undefined', 'Card', 'Bank',
        /// 'Blockchain'
        /// </summary>
        [JsonProperty(PropertyName = "Type")]
        public FundsType Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Timestamp")]
        public System.DateTime Timestamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Status")]
        public static string Status { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (AssetId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AssetId");
            }
            if (AssetName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AssetName");
            }
        }
    }
}
