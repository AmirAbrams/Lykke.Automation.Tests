// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Client.ApiV2.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Request model for submitting data to complete current challenge.
    /// </summary>
    public partial class RecoverySubmitChallengeRequestModel
    {
        /// <summary>
        /// Initializes a new instance of the
        /// RecoverySubmitChallengeRequestModel class.
        /// </summary>
        public RecoverySubmitChallengeRequestModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// RecoverySubmitChallengeRequestModel class.
        /// </summary>
        /// <param name="stateToken">JWE token containing current state of
        /// recovery process.</param>
        /// <param name="action">What action to perform on challenge. Possible
        /// values include: 'Undefined', 'Complete', 'Restart', 'Skip'</param>
        /// <param name="value">Value for submitting the challenge.</param>
        public RecoverySubmitChallengeRequestModel(string stateToken, Action action, string value)
        {
            StateToken = stateToken;
            Action = action;
            Value = value;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets JWE token containing current state of recovery
        /// process.
        /// </summary>
        [JsonProperty(PropertyName = "StateToken")]
        public string StateToken { get; set; }

        /// <summary>
        /// Gets or sets what action to perform on challenge. Possible values
        /// include: 'Undefined', 'Complete', 'Restart', 'Skip'
        /// </summary>
        [JsonProperty(PropertyName = "Action")]
        public Action Action { get; set; }

        /// <summary>
        /// Gets or sets value for submitting the challenge.
        /// </summary>
        [JsonProperty(PropertyName = "Value")]
        public string Value { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (StateToken == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "StateToken");
            }
            if (Value == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Value");
            }
        }
    }
}
