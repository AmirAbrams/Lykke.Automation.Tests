// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Client.ApiV2.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class CandleStickHistoryItem
    {
        /// <summary>
        /// Initializes a new instance of the CandleStickHistoryItem class.
        /// </summary>
        public CandleStickHistoryItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CandleStickHistoryItem class.
        /// </summary>
        public CandleStickHistoryItem(System.DateTime dateTime, double open, double close, double high, double low, double volume, double oppositeVolume)
        {
            DateTime = dateTime;
            Open = open;
            Close = close;
            High = high;
            Low = low;
            Volume = volume;
            OppositeVolume = oppositeVolume;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DateTime")]
        public System.DateTime DateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Open")]
        public double Open { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Close")]
        public double Close { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "High")]
        public double High { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Low")]
        public double Low { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Volume")]
        public double Volume { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OppositeVolume")]
        public double OppositeVolume { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
