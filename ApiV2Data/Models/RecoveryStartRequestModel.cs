// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Client.ApiV2.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Model for starting password recovery process.
    /// </summary>
    public partial class RecoveryStartRequestModel
    {
        /// <summary>
        /// Initializes a new instance of the RecoveryStartRequestModel class.
        /// </summary>
        public RecoveryStartRequestModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RecoveryStartRequestModel class.
        /// </summary>
        /// <param name="email">Client email address.</param>
        /// <param name="partnerId">Client partner id.</param>
        public RecoveryStartRequestModel(string email, string partnerId)
        {
            Email = email;
            PartnerId = partnerId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets client email address.
        /// </summary>
        [JsonProperty(PropertyName = "Email")]
        public string Email { get; set; }

        /// <summary>
        /// Gets or sets client partner id.
        /// </summary>
        [JsonProperty(PropertyName = "PartnerId")]
        public string PartnerId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Email == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Email");
            }
            if (PartnerId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PartnerId");
            }
        }
    }
}
