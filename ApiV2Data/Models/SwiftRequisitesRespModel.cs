// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Client.ApiV2.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class SwiftRequisitesRespModel
    {
        /// <summary>
        /// Initializes a new instance of the SwiftRequisitesRespModel class.
        /// </summary>
        public SwiftRequisitesRespModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SwiftRequisitesRespModel class.
        /// </summary>
        public SwiftRequisitesRespModel(string bic, string accountNumber, string accountName, string purposeOfPayment, string bankAddress, string companyAddress, string correspondentAccount)
        {
            Bic = bic;
            AccountNumber = accountNumber;
            AccountName = accountName;
            PurposeOfPayment = purposeOfPayment;
            BankAddress = bankAddress;
            CompanyAddress = companyAddress;
            CorrespondentAccount = correspondentAccount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Bic")]
        public string Bic { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AccountNumber")]
        public string AccountNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AccountName")]
        public string AccountName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PurposeOfPayment")]
        public string PurposeOfPayment { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BankAddress")]
        public string BankAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CompanyAddress")]
        public string CompanyAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CorrespondentAccount")]
        public string CorrespondentAccount { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Bic == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Bic");
            }
            if (AccountNumber == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AccountNumber");
            }
            if (AccountName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AccountName");
            }
            if (PurposeOfPayment == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PurposeOfPayment");
            }
            if (BankAddress == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "BankAddress");
            }
            if (CompanyAddress == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CompanyAddress");
            }
            if (CorrespondentAccount == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CorrespondentAccount");
            }
        }
    }
}
