// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Client.ApiV2.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class AccountsRegistrationResponseModel
    {
        /// <summary>
        /// Initializes a new instance of the AccountsRegistrationResponseModel
        /// class.
        /// </summary>
        public AccountsRegistrationResponseModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AccountsRegistrationResponseModel
        /// class.
        /// </summary>
        public AccountsRegistrationResponseModel(string token, string notificationsId, ApiPersonalDataModel personalData, bool canCashInViaBankCard, bool swiftDepositEnabled)
        {
            Token = token;
            NotificationsId = notificationsId;
            PersonalData = personalData;
            CanCashInViaBankCard = canCashInViaBankCard;
            SwiftDepositEnabled = swiftDepositEnabled;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Token")]
        public string Token { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "NotificationsId")]
        public string NotificationsId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PersonalData")]
        public ApiPersonalDataModel PersonalData { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CanCashInViaBankCard")]
        public bool CanCashInViaBankCard { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SwiftDepositEnabled")]
        public bool SwiftDepositEnabled { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Token == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Token");
            }
            if (NotificationsId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "NotificationsId");
            }
            if (PersonalData == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PersonalData");
            }
            if (PersonalData != null)
            {
                PersonalData.Validate();
            }
        }
    }
}
