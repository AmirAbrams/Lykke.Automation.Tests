// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Client.ApiV2.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class HistoryResponseModel
    {
        /// <summary>
        /// Initializes a new instance of the HistoryResponseModel class.
        /// </summary>
        public HistoryResponseModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the HistoryResponseModel class.
        /// </summary>
        /// <param name="type">Possible values include: 'CashIn', 'CashOut',
        /// 'Trade', 'OrderEvent'</param>
        /// <param name="state">Possible values include: 'None', 'InProgress',
        /// 'Finished', 'Canceled', 'Failed'</param>
        /// <param name="feeType">Possible values include: 'Unknown',
        /// 'Absolute', 'Relative'</param>
        public HistoryResponseModel(string id, System.DateTime dateTime, HistoryType type, HistoryState state, double amount, string asset, string assetPair, double price, double feeSize, FeeType feeType)
        {
            Id = id;
            DateTime = dateTime;
            Type = type;
            State = state;
            Amount = amount;
            Asset = asset;
            AssetPair = assetPair;
            Price = price;
            FeeSize = feeSize;
            FeeType = feeType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DateTime")]
        public System.DateTime DateTime { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'CashIn', 'CashOut', 'Trade',
        /// 'OrderEvent'
        /// </summary>
        [JsonProperty(PropertyName = "Type")]
        public HistoryType Type { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'None', 'InProgress',
        /// 'Finished', 'Canceled', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "State")]
        public HistoryState State { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Amount")]
        public double Amount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Asset")]
        public string Asset { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AssetPair")]
        public string AssetPair { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Price")]
        public double Price { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FeeSize")]
        public double FeeSize { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Unknown', 'Absolute',
        /// 'Relative'
        /// </summary>
        [JsonProperty(PropertyName = "FeeType")]
        public FeeType FeeType { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
            if (Asset == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Asset");
            }
            if (AssetPair == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AssetPair");
            }
        }
    }
}
