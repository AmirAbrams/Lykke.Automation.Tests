// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Client.AutorestClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Request model for placing new limit orders.
    /// </summary>
    public partial class PlaceLimitOrderModel
    {
        /// <summary>
        /// Initializes a new instance of the PlaceLimitOrderModel class.
        /// </summary>
        public PlaceLimitOrderModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PlaceLimitOrderModel class.
        /// </summary>
        /// <param name="assetPairId">The asset pair you want to buy or
        /// sell.</param>
        /// <param name="orderAction">The order action you want to perform (Buy
        /// or Sell). Possible values include: 'Buy', 'Sell'</param>
        /// <param name="volume">The amount of the asset you want to buy or
        /// sell, should be at least the minimum volume of the asset
        /// pair.</param>
        /// <param name="price">The price for which you want to buy or sell the
        /// asset.</param>
        public PlaceLimitOrderModel(string assetPairId, OrderAction orderAction, double volume, double price)
        {
            AssetPairId = assetPairId;
            OrderAction = orderAction;
            Volume = volume;
            Price = price;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the asset pair you want to buy or sell.
        /// </summary>
        [JsonProperty(PropertyName = "AssetPairId")]
        public string AssetPairId { get; set; }

        /// <summary>
        /// Gets or sets the order action you want to perform (Buy or Sell).
        /// Possible values include: 'Buy', 'Sell'
        /// </summary>
        [JsonProperty(PropertyName = "OrderAction")]
        public OrderAction OrderAction { get; set; }

        /// <summary>
        /// Gets or sets the amount of the asset you want to buy or sell,
        /// should be at least the minimum volume of the asset pair.
        /// </summary>
        [JsonProperty(PropertyName = "Volume")]
        public double Volume { get; set; }

        /// <summary>
        /// Gets or sets the price for which you want to buy or sell the asset.
        /// </summary>
        [JsonProperty(PropertyName = "Price")]
        public double Price { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (AssetPairId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AssetPairId");
            }
        }
    }
}
