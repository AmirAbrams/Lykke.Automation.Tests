// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Client.AutorestClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Response model class for limit order state.
    /// </summary>
    public partial class LimitOrderStateModel
    {
        /// <summary>
        /// Initializes a new instance of the LimitOrderStateModel class.
        /// </summary>
        public LimitOrderStateModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LimitOrderStateModel class.
        /// </summary>
        /// <param name="id">Gets or sets the identifier.</param>
        /// <param name="status">The limit order status. Possible values
        /// include: 'Pending', 'InOrderBook', 'Processing', 'Matched',
        /// 'NotEnoughFunds', 'NoLiquidity', 'UnknownAsset', 'Cancelled',
        /// 'LeadToNegativeSpread', 'InvalidPriceAccuracy',
        /// 'ReservedVolumeGreaterThanBalance', 'TooSmallVolume',
        /// 'Runtime'</param>
        /// <param name="assetPairId">The asset pair identifier.</param>
        /// <param name="volume">The volume of the limit order.</param>
        /// <param name="price">The price of the limit order.</param>
        /// <param name="remainingVolume">The remaining volume of the
        /// order.</param>
        /// <param name="lastMatchTime">The last match date time.</param>
        /// <param name="createdAt">The created at date time.</param>
        public LimitOrderStateModel(System.Guid id, OrderStatus status, string assetPairId, double volume, double price, double remainingVolume, System.DateTime? lastMatchTime, System.DateTime createdAt)
        {
            Id = id;
            Status = status;
            AssetPairId = assetPairId;
            Volume = volume;
            Price = price;
            RemainingVolume = remainingVolume;
            LastMatchTime = lastMatchTime;
            CreatedAt = createdAt;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the identifier.
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public System.Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the limit order status. Possible values include:
        /// 'Pending', 'InOrderBook', 'Processing', 'Matched',
        /// 'NotEnoughFunds', 'NoLiquidity', 'UnknownAsset', 'Cancelled',
        /// 'LeadToNegativeSpread', 'InvalidPriceAccuracy',
        /// 'ReservedVolumeGreaterThanBalance', 'TooSmallVolume', 'Runtime'
        /// </summary>
        [JsonProperty(PropertyName = "Status")]
        public OrderStatus Status { get; set; }

        /// <summary>
        /// Gets or sets the asset pair identifier.
        /// </summary>
        [JsonProperty(PropertyName = "AssetPairId")]
        public string AssetPairId { get; set; }

        /// <summary>
        /// Gets or sets the volume of the limit order.
        /// </summary>
        [JsonProperty(PropertyName = "Volume")]
        public double Volume { get; set; }

        /// <summary>
        /// Gets or sets the price of the limit order.
        /// </summary>
        [JsonProperty(PropertyName = "Price")]
        public double Price { get; set; }

        /// <summary>
        /// Gets or sets the remaining volume of the order.
        /// </summary>
        [JsonProperty(PropertyName = "RemainingVolume")]
        public double RemainingVolume { get; set; }

        /// <summary>
        /// Gets or sets the last match date time.
        /// </summary>
        [JsonProperty(PropertyName = "LastMatchTime")]
        public System.DateTime? LastMatchTime { get; set; }

        /// <summary>
        /// Gets or sets the created at date time.
        /// </summary>
        [JsonProperty(PropertyName = "CreatedAt")]
        public System.DateTime CreatedAt { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (AssetPairId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AssetPairId");
            }
        }
    }
}
